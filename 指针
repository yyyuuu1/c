//指针
//除了&数组名和sizeof（数组名）其他数组名表示的都是数组的首元素地址

//指针数组
//int main()
//{
//	int arr1[5] = { 1,2,3,4,5 };
//	int arr2[5] = { 2,3,4,5,6 };
//	int arr3[5] = { 3,4,5,6,7 };
//	int* parr[3] = {arr1,arr2,arr3};
//	int i = 0;
//	for(i=0;i<3;i++)
//	{
//		int j = 0;
//		for (j = 0; j < 5; j++)
//		{
//			printf("%d ", *(parr[i]+j));
//		}
//		printf("\n");
//	}
//	return 0;
//}



//数组指针

// int main()
//{
//int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//int (*pa)[10] = &arr;
//int i = 0;
//for (i = 0; i < 10; i++)
//{
//	//printf("%d ", *((*pa) + i));
//	//printf("%d ", (*pa)[i]);
//	//printf("%d ", arr[i]);//这几种写法完全等价
//}
//return 0;
//}


//数组的形式
//void print1(int arr[3][5], int x, int y)
//{
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < x; i++)
//	{
//		for (j = 0; j < y; j++)
//		{
//			printf("%d ", arr[i][j]);
//		}
//		printf("\n");
//	}
//}

//指针的形式
//void print2(int(*p)[5], int x, int y)
//{
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < x; i++)
//	{
//		for(j=0;j<y;j++)
//		{
//			//printf("%d ", *( * (p + i) + j));
//			printf("%d ", p[i][j]);              //这几种写法完全等价
//			//printf("%d ", *(p[i]+j));
//			//printf("%d ", ( * (p + i))[j]);
//		}
//		printf("\n");
//	}
//}
//int main()
//{
//	int arr[3][5] = { {1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7} };
//	//print1(arr, 3, 5);
//	print2(arr, 3, 5);
//	return 0;
//}
