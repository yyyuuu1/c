//realloc
//realloc使用的注意事项：
//1.如果p指向的空间之后有足够的内存空间可以追加，则直接追加，后返回p
//2.如果p指向的空间之后没有足够的内存空间可以追加，则realloc函数会重新找一个新的内存区域
//开辟一块满足需求的空间，并且把原来内存中的数据拷贝回来，释放旧的内存空间
//最后返回新开辟的内存空间地址
//3.得用一个新的变量来接受realloc函数的返回

//int main()
//{
//	int* p = (int*)malloc(5 * sizeof(int));
//	if (p == NULL)
//	{
//		printf("%s\n", strerror(errno));
//	}
//	int i = 0;
//	for (i = 0; i < 5; i++)
//	{
//		*(p + i) = i;
//	}
//
//	int* ptr =realloc(p, 20);
//	if (ptr != NULL)
//	{
//		p = ptr;
//		int i = 0;
//		for (i = 5; i < 10; i++)
//		{
//			*(p + i) = i;
//		}
//		for (i = 0; i < 10; i++)
//		{
//			printf("%d ", *(p + i));
//		}
//	}
//	free(p);
//	p = NULL;
//	return 0;
//}
