//函数指针
//int add(int x, int y)
//{
//	int z = 0;
//	z = x + y;
//	return z;
//}
//
//int main()
//{
//	int a = 10;
//	int b = 20;
//	int (*pa)(int,int)=add;
//	printf("%d ", (*pa)(2,3));
//	return 0;
//}

//void print(char* str)
//{
//	printf("%s\n", str);
//}
//
//int main()
//{
//	void (*pa)(char*) = print;
//	(*pa)("hello");
//	return 0;
//}







//char* my_strcpy(char* dest, const char* src);
////1.写一个函数指针pf，能够指向my_strcpy
//char* (*pf)(char*, const char*);
////2.写一个函数指针数组pfArr，能够存放4个my_strcpy函数的地址
//char* (*pfArr[4])(char*, const char*);


//signal是一个函数声明
// signal是一个函数该函数有两个参数，一个是int，另一个是函数指针，该函数指针的参数是int返回类型是void
// signal函数的返回类型也是一个函数指针，该指针的参数是int 返回类型是void

//void(*signal(int, void(*)(int)))(int);
////简化的写法
//typedef void(*sun)(int);
//sun signal(int, sun);


//(*(void(*)())0)();
//把0强制类型转换成void(*)()函数指针类型0是一个函数的地址
//调用地址为0处的函数
