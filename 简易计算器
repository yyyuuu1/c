#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h>


//修改前
//void nemu()
//{
//	printf("*******************************\n");
//	printf("****1.add     2.sub************\n");
//	printf("****3.mul     4.div************\n");
//	printf("****5.xor     0.exit***********\n");
//	printf("*******************************\n");
//}
//int add(int x, int y)
//{
//	return x + y;
//}
//int sub(int x, int y)
//{
//	return x - y;
//}
//int mul(int x, int y)
//{
//	return x * y;
//}
//int div(int x, int y)
//{
//	return x / y;
//}
//int xor (int x, int y)
//{
//	return x ^ y;
//}
//
//int main()
//{
//	int input = 0;
//	int x = 0;
//	int y = 0;
//	do
//	{
//		nemu();
//		printf("请选择\n");
//		scanf("%d", &input);
//		switch(input)
//		{
//		    case 0:
//			   printf("退出\n");
//			   break;
//			case 1:
//				printf("请输入两个数\n");
//				scanf("%d%d", &x, &y);
//				printf("%d\n", add(x, y));
//				break;
//			case 2:
//				printf("请输入两个数\n");
//				scanf("%d%d", &x, &y);
//				printf("%d\n", sub(x, y));
//				break;
//			case 3:
//				printf("请输入两个数\n");
//				scanf("%d%d", &x, &y);
//				printf("%d\n", mul(x, y));
//				break;
//			case 4:
//				printf("请输入两个数\n");
//				scanf("%d%d", &x, &y);
//				printf("%d\n", div(x, y));
//				break;
//			case 5:
//				printf("请输入两个数\n");
//				scanf("%d%d", &x, &y);
//				printf("%d\n", xor (x, y));
//				break;
//			default:
//					printf("选择错误\n");
//					break;
//		}
//	} while (input);
//	return 0;
//}




//回调函数实现
void nemu()
{
	printf("*******************************\n");
	printf("****1.add     2.sub************\n");
	printf("****3.mul     4.div************\n");
	printf("****5.xor     0.exit***********\n");
	printf("*******************************\n");
}
int add(int x, int y)
{
	return x + y;
}
int sub(int x, int y)
{
	return x - y;
}
int mul(int x, int y)
{
	return x * y;
}
int div(int x, int y)
{
	return x / y;
}
int zxc(int x, int y)//按位异或
{
	return x ^ y;
}

void  calc(int (*pf)(int, int))
{
	int x = 0;
	int y = 0;
	printf("请输入两个数\n");
	scanf_s("%d%d", &x, &y);
    printf("%d\n", pf(x, y));
}

int main()
{
	int input = 0;
	int x = 0;
	int y = 0;
	do
	{
		nemu();
		printf("请选择\n");
		scanf_s("%d", &input);
		switch(input)
		{
		    case 0:
			   printf("退出\n");
			   break;
			case 1:
				calc(add);
				break;
			case 2:
				calc(sub);
				break;
			case 3:
				calc(mul);
				break;
			case 4:
				calc(div);
				break;
			case 5:
				calc(zxc);
				break;
			default:
				printf("选择错误\n");
				break;
		}
	} while (input);
	return 0;
}





//优化后
//用函数指针数组来实现
//void nemu()
//{
//	printf("*******************************\n");
//	printf("****1.add     2.sub************\n");
//	printf("****3.mul     4.div************\n");
//	printf("****5.xor     0.exit***********\n");
//	printf("*******************************\n");
//}
//int add(int x, int y)
//{
//	return x + y;
//}
//int sub(int x, int y)
//{
//	return x - y;
//}
//int mul(int x, int y)
//{
//	return x * y;
//}
//int div(int x, int y)
//{
//	return x / y;
//}
//int xor (int x, int y)
//{
//	return x ^ y;
//}
//
//int main()
//{
//	int input = 0;
//	int x = 0;
//	int y = 0;
//	//pfarr是函数指针数组
//	int (*pfArr[])(int, int) = { 0,add,sub,mul,div,xor };
//	do
//	{
//		nemu();
//		printf("请选择\n");
//		scanf("%d", &input);
//		if (input >= 1 && input <= 5)
//		{
//			printf("请输入两个数\n");
//			scanf("%d%d", &x, &y);
//			int ret = pfArr[input](x, y);
//			printf("%d\n", ret);
//		}
//		else if (input == 0)
//		{
//			printf("退出\n");
//		}
//		else
//		{
//			printf("选择错误\n");
//		}
//
//	} while (input);
//	return 0;
//}
