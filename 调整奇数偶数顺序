//调整奇数偶数顺序
//数组的奇数都位于偶数前面

void print(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
}

void move(int arr[], int sz)
{
	//算法思想
	//从左边找一个奇数
	//从右边找一个偶数
	// 交换
	int left = 0;
	int right = sz - 1;
	//从左边找奇数
	while (left < right)
	{
		while (arr[left] % 2 == 1&& left < right)//如果不增加left < right  当数组内容是全奇数时会造成越界访问
		{
			left++;
		}
		//从右边找偶数
		while (arr[right] % 2 == 0&& left < right)//如果不增加left < right  当数组内容是全偶数时会造成越界访问
		{
			right--;
		}
		if (left < right)
		{
			int tmp = arr[left];
			arr[left] = arr[right];
			arr[right] = tmp;
		}
	}
}

int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	move(arr,sz);
	print(arr,sz);
	return 0;
}
